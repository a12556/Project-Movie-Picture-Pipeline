name: Backend-CD Workflow

on:
  push:
    branches:
      - main
    paths:
      - 'workspaces/starter/backend/**'
  workflow_dispatch:

jobs:
  lint_and_test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Set up Python
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10-alpine'

      # Install backend dependencies
      - name: Install backend dependencies
        run: pip install pipenv && pipenv install --dev

      # Run linting
      - name: Run backend linting
        run: pipenv run flake8 backend

      # Run tests
      - name: Run backend tests
        run: pipenv run pytest backend/test_app.py

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint_and_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10-alpine'

      # Install backend dependencies
      - name: Install backend dependencies
        run: pip install pipenv && pipenv install --dev

      # Run backend build - Replace this with your actual build command
      - name: Run backend build
        run: pipenv run python backend/build.py

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up kubectl
      - name: Set up kubectl
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.DOCKER_REGISTRY_URL_BE }}
        username: ${{ secrets.REGISTRY_USERNAME_BE }}
        password: ${{ secrets.REGISTRY_PASSWORD_BE }}

    - name: Build and Docker image
      run: |
        IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --push \
          --tag ${{ secrets.DOCKER_REGISTRY_URL_BE }}/${{ secrets.image-BE-name }}:$IMAGE_TAG \
      - name: Run tests
        run: npm run test

      - name: Run build
        run: npm run build
      - name: Tag Docker image with Git SHA
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          docker tag ${{ secrets.DOCKER_REGISTRY_URL_BE }}/${{ secrets.image-BE-name }}:$IMAGE_TAG \
            ${{ secrets.DOCKER_REGISTRY_URL_BE }}/${{ secrets.image-BE-name }}:$IMAGE_TAG
      - name: Push Docker image with Git SHA tag to ECR
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          docker push ${{ secrets.DOCKER_REGISTRY_URL_BE }}/${{ secrets.image-BE-name }}:$IMAGE_TAG


    - name: Deploy to Kubernetes
      run: |
        IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
        sed -i "s|image-BE-name:latest|${{ secrets.DOCKER_REGISTRY_URL }}/${{ secrets.image-BE-name }}:$IMAGE_TAG|g" workspace/starter/backend/k8s/deployment.yaml
        echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
        kubectl apply -f workspace/starter/frontend/k8s/deployment.yml --kubeconfig=kubeconfig.yaml
        kubectl apply -f workspace/starter/frontend/k8s/service.yml --kubeconfig=kubeconfig.yaml
